/**
 * Whop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.10
 * Contact: support@whop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateCheckoutLogRequest from '../model/CreateCheckoutLogRequest';
import CreateCheckoutLogResponse from '../model/CreateCheckoutLogResponse';
import ErrorResponse from '../model/ErrorResponse';
import GetCheckoutLogsResponse from '../model/GetCheckoutLogsResponse';

/**
* CheckoutLogs service.
* @module api/CheckoutLogsApi
* @version 1.0.10
*/
export default class CheckoutLogsApi {

    /**
    * Constructs a new CheckoutLogsApi. 
    * @alias module:api/CheckoutLogsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Add Checkout Log
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateCheckoutLogRequest} opts.createCheckoutLogRequest Click the arrow to the right to see the full body.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CreateCheckoutLogResponse} and HTTP response
     */
    createCheckoutLogWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['createCheckoutLogRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateCheckoutLogResponse;
      return this.apiClient.callApi(
        '/v1/checkout_logs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Add Checkout Log
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateCheckoutLogRequest} opts.createCheckoutLogRequest Click the arrow to the right to see the full body.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CreateCheckoutLogResponse}
     */
    createCheckoutLog(opts) {
      return this.createCheckoutLogWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Fetch Checkout Logs
     * @param {Object} opts Optional parameters
     * @param {String} opts.key Key for which you want to fetch checkout logs.
     * @param {module:model/String} opts.status Status of checkout logs to filter by.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetCheckoutLogsResponse} and HTTP response
     */
    getCheckoutLogsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'key': opts['key'],
        'status': opts['status']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCheckoutLogsResponse;
      return this.apiClient.callApi(
        '/v1/checkout_logs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Fetch Checkout Logs
     * @param {Object} opts Optional parameters
     * @param {String} opts.key Key for which you want to fetch checkout logs.
     * @param {module:model/String} opts.status Status of checkout logs to filter by.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetCheckoutLogsResponse}
     */
    getCheckoutLogs(opts) {
      return this.getCheckoutLogsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
