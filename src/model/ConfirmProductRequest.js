/**
 * Whop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.10
 * Contact: support@whop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConfirmProductRequest model module.
 * @module model/ConfirmProductRequest
 * @version 1.0.10
 */
class ConfirmProductRequest {
    /**
     * Constructs a new <code>ConfirmProductRequest</code>.
     * @alias module:model/ConfirmProductRequest
     */
    constructor() { 
        
        ConfirmProductRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConfirmProductRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfirmProductRequest} obj Optional instance to populate.
     * @return {module:model/ConfirmProductRequest} The populated <code>ConfirmProductRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfirmProductRequest();

            if (data.hasOwnProperty('cancel_action')) {
                obj['cancel_action'] = ApiClient.convertToType(data['cancel_action'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('expiration_days')) {
                obj['expiration_days'] = ApiClient.convertToType(data['expiration_days'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('license_type')) {
                obj['license_type'] = ApiClient.convertToType(data['license_type'], 'String');
            }
            if (data.hasOwnProperty('initial_price')) {
                obj['initial_price'] = ApiClient.convertToType(data['initial_price'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('billing_period')) {
                obj['billing_period'] = ApiClient.convertToType(data['billing_period'], 'Number');
            }
            if (data.hasOwnProperty('stock')) {
                obj['stock'] = ApiClient.convertToType(data['stock'], 'Number');
            }
            if (data.hasOwnProperty('transferable')) {
                obj['transferable'] = ApiClient.convertToType(data['transferable'], 'Boolean');
            }
            if (data.hasOwnProperty('custom_trial_period')) {
                obj['custom_trial_period'] = ApiClient.convertToType(data['custom_trial_period'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Defines what occurs when a user's license is canceled. Can be: kick_user, remove_roles, remove_all_roles, no_action.
 * @member {module:model/ConfirmProductRequest.CancelActionEnum} cancel_action
 */
ConfirmProductRequest.prototype['cancel_action'] = undefined;

/**
 * Title of the product.
 * @member {String} title
 */
ConfirmProductRequest.prototype['title'] = undefined;

/**
 * If you would like this product to expire for users who are on it, you can set an expiration days. After this many days, the users license will be terminated.
 * @member {Number} expiration_days
 */
ConfirmProductRequest.prototype['expiration_days'] = undefined;

/**
 * 3 letter currency code.
 * @member {String} currency
 */
ConfirmProductRequest.prototype['currency'] = undefined;

/**
 * One time payments charge the user at purchase Renewal charge the user every set period. Can be: one_time, renewal.
 * @member {module:model/ConfirmProductRequest.LicenseTypeEnum} license_type
 */
ConfirmProductRequest.prototype['license_type'] = undefined;

/**
 * (Required). The initial purchase price.
 * @member {Number} initial_price
 */
ConfirmProductRequest.prototype['initial_price'] = undefined;

/**
 * The renewal price.
 * @member {Number} price
 */
ConfirmProductRequest.prototype['price'] = undefined;

/**
 * If the product is renewal, you can pass in (days) of how often the period should renew.
 * @member {Number} billing_period
 */
ConfirmProductRequest.prototype['billing_period'] = undefined;

/**
 * Amount of inventory available.
 * @member {Number} stock
 */
ConfirmProductRequest.prototype['stock'] = undefined;

/**
 * @member {Boolean} transferable
 */
ConfirmProductRequest.prototype['transferable'] = undefined;

/**
 * Show time of the trial period in days.
 * @member {Number} custom_trial_period
 */
ConfirmProductRequest.prototype['custom_trial_period'] = undefined;





/**
 * Allowed values for the <code>cancel_action</code> property.
 * @enum {String}
 * @readonly
 */
ConfirmProductRequest['CancelActionEnum'] = {

    /**
     * value: "kick_user"
     * @const
     */
    "kick_user": "kick_user",

    /**
     * value: "remove_roles"
     * @const
     */
    "remove_roles": "remove_roles",

    /**
     * value: "remove_all_roles"
     * @const
     */
    "remove_all_roles": "remove_all_roles",

    /**
     * value: "no_action"
     * @const
     */
    "no_action": "no_action"
};


/**
 * Allowed values for the <code>license_type</code> property.
 * @enum {String}
 * @readonly
 */
ConfirmProductRequest['LicenseTypeEnum'] = {

    /**
     * value: "one_time"
     * @const
     */
    "one_time": "one_time",

    /**
     * value: "renewal"
     * @const
     */
    "renewal": "renewal"
};



export default ConfirmProductRequest;

